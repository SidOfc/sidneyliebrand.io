@use "sass:map";
@use "sass:list";

// NOTE: $vars is injected via next.config.js
@mixin css-theme-vars {
  @media (prefers-color-scheme: dark) {
    @include not-themed('&$0') {
      @each $var, $value in map-deep-get($vars, 'themes', 'dark') {
        --#{$var}: #{$value};
      }
    }
  }

  @each $theme, $config in map-deep-get($vars, 'themes') {
    @if ($theme == "light") {
      @each $var, $value in $config {
        --#{$var}: #{$value};
      }
    } @else {
      &.#{$theme} {
        @each $var, $value in $config {
          --#{$var}: #{$value};
        }
      }
    }
  }
}

@mixin themed($property, $args...) {
  $length: list.length($args);
  $var: list.nth($args, 1);

  @if $length == 1 {
    #{$property}: #{map-deep-get($vars, 'themes', 'light', $var)};
    #{$property}: var(--#{$var});
  } @else if $length > 1 {
    $values: ();
    $keys: ();

    @for $idx from 2 through $length {
      $arg: list.nth($args, $idx);
      $values: list.append($values, map-deep-get($vars, 'themes', 'light', $arg));
      $keys: list.append($keys, "var(--#{$arg})");
    }

    #{$property}: #{substitute($var, $values...)};
    #{$property}: #{substitute($var, $keys...)};
  }
}

@mixin active-theme($theme) {
  :global(.#{$theme}) & {
    @content;
  }

  @if $theme == 'dark' {
    @include not-themed('html$0 &') {
      @media (prefers-color-scheme: dark) {
        @content;
      }
    }
  }
}

@mixin not-themed($structure) {
  $not-selector: '';
  @each $theme in map-keys(map-deep-get($vars, 'themes')) {
    $not-selector: "#{$not-selector}:not(.#{$theme})";
  }

  #{substitute($structure, $not-selector)} {
    @content;
  }
}

@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }

  @return $map;
}
